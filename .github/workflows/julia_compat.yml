name: Julia CompatHelper
on:
  workflow_call:
    secrets:
      SERVICE_TOKEN:
        description: "Token to use for creating CompatHelper PRs"
        required: false
      SERVICE_USER:
        description: "Username of service account to make commits"
        required: false
      SERVICE_NAME:
        description: "Name of service account to make commits"
        required: false
      SERVICE_EMAIL:
        description: "Email of service account to make commits"
        required: false
jobs:
  CompatHelper:
    runs-on: ubuntu-latest
    steps:
      - name: Check if Julia is already available in the PATH
        id: julia_in_path
        run: which julia
        continue-on-error: true
      - name: Install Julia, but only if it is not already available in the PATH
        uses: julia-actions/setup-julia@v2
        with:
          version: "1"
          arch: ${{ runner.arch }}
        if: steps.julia_in_path.outcome != 'success'
      - name: "Add the General registry via Git"
        run: |
          import Pkg
          ENV["JULIA_PKG_SERVER"] = ""
          Pkg.Registry.add("General")
        shell: julia --color=yes {0}
      - name: "Install CompatHelper"
        run: |
          import Pkg
          name = "CompatHelper"
          uuid = "aa819f21-2bde-4658-8897-bab36330d9b7"
          version = "3"
          Pkg.add(; name, uuid, version)
        shell: julia --color=yes {0}
      - name: "Run CompatHelper"
        run: |
          import CompatHelper
          CompatHelper.main(
            ENV,
            haskey(ENV, "GIT_COMMITTER_USER") && haskey(ENV, "GIT_COMMITTER_EMAIL") ?
            CompatHelper.GitHubActions(username=ENV["GIT_COMMITTER_USER"], email=ENV["GIT_COMMITTER_EMAIL"])
            : CompatHelper.auto_detect_ci_service()
          )
        shell: julia --color=yes {0}
        env:
          GITHUB_TOKEN: ${{ secrets.SERVICE_TOKEN }}
          GIT_COMMITTER_USER: ${{ secrets.SERVICE_USER}}
          GIT_COMMITTER_NAME: ${{ secrets.SERVICE_NAME }}
          GIT_COMMITTER_EMAIL: ${{ secrets.SERVICE_EMAIL }}
