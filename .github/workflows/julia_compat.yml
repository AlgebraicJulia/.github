name: Julia CompatHelper
on:
  workflow_call:
    secrets:
      RELEASE_TOKEN:
        description: "Token to use for creating CompatHelper PRs"
        required: false
    inputs:
      git_username:
        description: "Username of github user"
        default: "algebraicjuliabot"
        required: false
        type: string
      git_name:
        description: "Name of github user"
        default: "AlgebraicJulia Bot"
        required: false
        type: string
      git_email:
        description: "Email of github user"
        # TODO: Replace email with an official one like bot@algebraicjulia.org, but needs to be added to user account first
        default: "mhalter3378@gmail.com"
        required: false
        type: string
jobs:
  CompatHelper:
    runs-on: ubuntu-latest
    steps:
      - name: Check if Julia is already available in the PATH
        id: julia_in_path
        run: which julia
        continue-on-error: true
      - name: Install Julia, but only if it is not already available in the PATH
        uses: julia-actions/setup-julia@v1
        with:
          version: "1"
          arch: ${{ runner.arch }}
        if: steps.julia_in_path.outcome != 'success'
      - name: "Add the General registry via Git"
        run: |
          import Pkg
          ENV["JULIA_PKG_SERVER"] = ""
          Pkg.Registry.add("General")
        shell: julia --color=yes {0}
      - name: "Install CompatHelper"
        run: |
          import Pkg
          name = "CompatHelper"
          uuid = "aa819f21-2bde-4658-8897-bab36330d9b7"
          version = "3"
          Pkg.add(; name, uuid, version)
        shell: julia --color=yes {0}
      - name: "Run CompatHelper"
        run: |
          import CompatHelper
          CompatHelper.main(
            ENV,
            CompatHelper.GitHubActions(username=ENV["GIT_COMMITTER_USERNAME"], email=ENV["GIT_COMMITTER_EMAIL"])
          )
        shell: julia --color=yes {0}
        env:
          GITHUB_TOKEN: ${{ secrets.RELEASE_TOKEN }}
          GIT_COMMITTER_USERNAME: ${{ inputs.git_username }}
          GIT_COMMITTER_NAME: ${{ inputs.git_name }}
          GIT_COMMITTER_EMAIL: ${{ inputs.git_email }}
